{"version":3,"sources":["components/empTable/index.js","utils/API.js","components/Directory/index.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeTable","props","TableContainer","component","Paper","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","onClick","handleSort","TableBody","employees","map","emp","align","alt","name","first","last","src","picture","thumbnail","gender","email","phone","location","city","state","id","value","API","axios","get","Directory","bind","then","response","console","log","setState","data","results","catch","err","key","order","a","b","hasOwnProperty","varA","toUpperCase","varB","comparison","column","this","sorted","sort","compareValues","Typography","variant","Component","App","Container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c27ebcca.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nfunction EmployeeTable(props) {\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table stickyHeader aria-label=\"Employee Table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Picture</TableCell>\r\n                        <TableCell>First Name</TableCell>\r\n                        <TableCell>Last Name</TableCell>\r\n                        <TableCell>Gender</TableCell>\r\n                        <TableCell>\r\n                            <span onClick={() => props.handleSort(\"email\", \"asc\")}>\r\n                                Email\r\n                            </span>\r\n                        </TableCell>\r\n                        <TableCell>Phone Number</TableCell>\r\n                        <TableCell>City</TableCell>\r\n                        <TableCell>State</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {\r\n                        props.employees.map(emp => {\r\n                            return <TableRow key={emp.id.value}>\r\n                                <TableCell align=\"left\"><img alt={`${emp.name.first} ${emp.name.last}`} src={emp.picture.thumbnail}></img></TableCell>\r\n                                <TableCell align=\"left\">{emp.name.first}</TableCell>\r\n                                <TableCell align=\"left\">{emp.name.last}</TableCell>\r\n                                <TableCell align=\"left\">{emp.gender}</TableCell>\r\n                                <TableCell align=\"left\">{emp.email}</TableCell>\r\n                                <TableCell align=\"left\">{emp.phone}</TableCell>\r\n                                <TableCell align=\"left\">{emp.location.city}</TableCell>\r\n                                <TableCell align=\"left\">{emp.location.state}</TableCell>\r\n                            </TableRow>\r\n                        })\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n\r\nexport default EmployeeTable; ","import axios from \"axios\";\r\n\r\nconst API = {\r\n    getEmployees: function () {\r\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\")\r\n    }\r\n}\r\n\r\nexport { API } ","import React, { Component } from \"react\";\nimport Typography from \"@material-ui/core/Typography\"\nimport EmployeeTable from \"../empTable\";\nimport { API } from \"../../utils/API\";\n\nclass Directory extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            employees: []\n        }\n        this.handleSort = this.handleSort.bind(this);\n    }\n\n    componentDidMount() {\n        API.getEmployees()\n            .then(response => {\n                console.log(response);\n                this.setState({\n                    employees: response.data.results\n                })\n\n            })\n            .catch(err => console.log(err));\n    }\n\n    compareValues(key, order = 'asc') {\n        return function innerSort(a, b) {\n            if (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\n                // property doesn't exist on either object\n                return 0;\n            }\n\n            const varA = (typeof a[key] === 'string')\n                ? a[key].toUpperCase() : a[key];\n            const varB = (typeof b[key] === 'string')\n                ? b[key].toUpperCase() : b[key];\n\n            let comparison = 0;\n            if (varA > varB) {\n                comparison = 1;\n            } else if (varA < varB) {\n                comparison = -1;\n            }\n            return (\n                (order === 'desc') ? (comparison * -1) : comparison\n            );\n        };\n    }\n\n    handleSort(column, order) {\n        console.log(this.state.employees);\n        let sorted = [...this.state.employees].sort(this.compareValues(column, order));\n        this.setState({ employees: sorted });\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Typography variant=\"h2\" align=\"center\">Employee Directory</Typography>\n                <EmployeeTable employees={this.state.employees} handleSort={this.handleSort} />\n            </div>\n        )\n    }\n\n}\n\nexport default Directory; ","import Container from '@material-ui/core/Container';\nimport Directory from './components/Directory';\n\nfunction App() {\n  return (\n    <Container>\n      <Directory />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}